#!/usr/bin/bash

BSPWM=~/.config/bspwm/bspwmrc
FEH=~/.fehbg
WAL="$2"
CHG=/usr/local/bin/changer
FEHBAK="cat ~/.fehbak > ~/.fehbg 2>/dev/null"
PYWAL="~/.pywal"

print_help() {
    echo "Usage: default-wallpaper [--set] [--remove] \"wallpaper_image_path.jpg\""
    echo "--set: Set a default wallpaper at startup."
    echo "--remove: Change back to random wallpapers upon startup."
    echo -e "\nExample: default-wallpaper --set ~/Pictures/Wallpapers/wallpaper_name.jpg"
    echo -e "Example: default-wallpaper --remove\n"
    echo "[!] Videos are not supported yet!"
}

# Kill unnecessary processes
scripts=`ps -ef | grep -v "grep" | grep ".config/polybar/.*/scripts/.*" | awk -vpid=$$ '$2 != pid { print $2 }'`
for d in $scripts
do
    kill -9 $d
    wait
done

colorblocks=`ps -efww | grep -v "grep" | grep "\--colorblocks" | awk -vpid=$$ '$2 != pid { print $2 }'`
for d in $colorblocks
do
    echo "[-] The colorblocks theme $d is still running, killing it"
    kill -9 $d
    wait
done
trans=`ps -efww | grep -v "grep" | grep "\--trans" | awk -vpid=$$ '$2 != pid { print $2 }'`
for d in $trans
do
    echo "[-] The trans theme $d is still running, killing it"
    kill -9 $d
    wait
done

# Add Default Wallpaper
set_wallpaper() {
    # Remove Video Wallpaper First
    video-wallpaper.sh --stop &>/dev/null
    # Prevent adding multiple # (comments), maybe there's a better solution
    sed -i -e "s|#$CHG|$CHG|g" $BSPWM 2>/dev/null
    # Comment changer so it doesn't execute at startup
    sed -i -e "s|$CHG|#$CHG|" $BSPWM
    # Uncomment fehbak to parse the default wallpaper
    sed -i -e "s|#$FEHBAK|$FEHBAK|g" $BSPWM
    # Uncomment pywal to apply the correct color
    sed -i -e "s|#$PYWAL|$PYWAL|g" $BSPWM
    # Apply the wallpaper and save the backup
    echo "#!/bin/sh" | tee $FEH ~/.fehbak > /dev/null
    echo "feh --no-fehbg --bg-fill '$WAL'" | tee -a $FEH ~/.fehbak >> /dev/null
    if [[ ! -z $(ps -efww | grep -vE "grep|launch.sh|scripts" | grep "colorblocks" | awk -vpid=$$ '$2 != pid { print $2 }') ]]; then
        bash ~/.config/polybar/colorblocks/scripts/pywal.sh $WAL
        #wait $!
        #/usr/bin/bash ~/.config/polybar/launch.sh --colorblocks &
        #wait $!
    elif [[ ! -z $(ps -efww | grep -vE "grep|launch.sh|scripts" | grep "trans" | awk -vpid=$$ '$2 != pid { print $2 }') ]]; then
        bash ~/.config/polybar/trans/scripts/pywal.sh $WAL
        #wait $!
        #/usr/bin/bash ~/.config/polybar/launch.sh --trans & 
        #wait $!
    else
        echo "[-] A polybar theme is not running"
        exit
    fi
    bspc wm -r
    echo "[+] Added a default wallpaper!"
}

# Remove Default Wallpaper (change back to changer)
remove_wallpaper() {
    # Uncomment changer so that it executes at login
    sed -i -e "s|#$CHG|$CHG|g" $BSPWM
    # Prevent adding multiple # (comments), maybe there's a better solution
    sed -i -e "s|#$FEHBAK|$FEHBAK|g" $BSPWM 2>/dev/null
    # Comment fehbak so it doesn't execute at startup
    sed -i -e "s|$FEHBAK|#$FEHBAK|g" $BSPWM
    # Prevent adding multiple # (comments), maybe there's a better solution
    sed -i -e "s|#$PYWAL|$PYWAL|g" $BSPWM 2>/dev/null
    # Comment pywal because is already executed in changer
    sed -i -e "s|$PYWAL|#$PYWAL|g" $BSPWM
    echo "[+] Random wallpapers will be set at login!"
}

# Parse parameters
while true
    do if [ $# -gt 0 ]
        then case $1 in
        --set*)
            set_wallpaper
            exit 0
            ;;
	    --remove*)
            remove_wallpaper
            exit 0
            ;;
        --help*)
            print_help
            exit 1
            ;;
            *)
            print_help
            exit 1
            ;;	
        esac
    else
        print_help
        echo "[-] Missing wallpaper path!"
        exit 2
    fi
done